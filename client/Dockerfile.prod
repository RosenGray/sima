# Stage 1: Build the app
FROM node:alpine AS builder

WORKDIR /app

# Copy only the package.json and package-lock.json to take advantage of Docker layer caching
COPY package.json ./

RUN npm install next@14.1.0 react@18.2.0 react-dom@18.2.0 --save-exact

# Install dependencies
RUN npm install

# Copy the rest of the appâ€™s source code
COPY . .

# Build the Next.js app
RUN npm run build

# Stage 2: Serve the app with a lightweight server
FROM node:alpine

WORKDIR /app

COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./
# Copy the built files from the 'builder' stage
COPY --from=builder /app ./

# Install only production dependencies (for a lighter image)
RUN npm install --production

# Expose the default Next.js port
EXPOSE 3000

# Start the app in production mode
CMD ["npm", "run", "start"]
